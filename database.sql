
CREATE DATABASE MOVIE_BOOKING;
USE MOVIE_BOOKING;

SET time_zone = '+07:00';

CREATE TABLE PROVINCE(
    provinceID INT NOT NULL AUTO_INCREMENT PRIMARY KEY ,
    provinceName CHAR(200)
);

CREATE TABLE CINEMA(
    cinemaID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    cinemaName CHAR(200),
    cinemaAddress CHAR(200),
    mapLink CHAR(255),
    provinceID int
);

ALTER TABLE CINEMA ADD CONSTRAINT FK_CinemaProvince FOREIGN KEY (provinceID) REFERENCES PROVINCE(provinceID) ON DELETE SET NULL ON UPDATE CASCADE;

CREATE TABLE ROOM(
    roomID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    roomName CHAR(200),
    numberOfRow INT,
    numberOfCol INT,
    cinemaID INT
);

ALTER TABLE ROOM ADD CONSTRAINT FK_RoomCinema FOREIGN KEY (cinemaID) REFERENCES CINEMA(cinemaID) ON DELETE SET NULL ON UPDATE CASCADE;

CREATE TABLE CATEGORY(
    categoryID int NOT NULL AUTO_INCREMENT PRIMARY KEY ,
    cateName CHAR(255)
);

CREATE TABLE TAG( 
    tagID int NOT NULL AUTO_INCREMENT PRIMARY KEY ,
    tagName CHAR(255),
    minAge INT
);

CREATE TABLE MOVIE(
    movieID int NOT NULL AUTO_INCREMENT PRIMARY KEY,
    movieName CHAR(255),
    movieDes TEXT,
    posterLink CHAR(255),
    trailerLink CHAR(255),
    movieDirectors CHAR(255),
    movieActors CHAR(255),
    duringTime INT,
    dateRelease TIMESTAMP,
    movieLanguage CHAR(100),
    tagID INT
);

ALTER TABLE MOVIE ADD CONSTRAINT FK_MovieTag FOREIGN KEY (tagID) REFERENCES TAG(tagID) ON DELETE SET NULL ON UPDATE CASCADE;

CREATE TABLE MOVIE_CATEGORY(
    movieID INT NOT NULL,
    categoryID INT NOT NULL,
    PRIMARY KEY (movieID, categoryID)
);

ALTER TABLE MOVIE_CATEGORY ADD CONSTRAINT FK_Movie FOREIGN KEY (movieID) REFERENCES MOVIE(movieID) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE MOVIE_CATEGORY ADD CONSTRAINT FK_Category FOREIGN KEY (categoryID) REFERENCES CATEGORY(categoryID) ON DELETE CASCADE ON UPDATE CASCADE;

CREATE TABLE SHOWTIME(
    showID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    timeStart TIMESTAMP,
    duringTime int,
    roomID int,
    movieID int
);

ALTER TABLE SHOWTIME ADD CONSTRAINT FK_ShowRoom FOREIGN KEY (roomID) REFERENCES ROOM(roomID) ON DELETE SET NULL ON UPDATE CASCADE;
ALTER TABLE SHOWTIME ADD CONSTRAINT FK_ShowCinema FOREIGN KEY (movieID) REFERENCES MOVIE(movieID) ON DELETE SET NULL ON UPDATE CASCADE;

CREATE TABLE SEAT_TYPE(
    seatType INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    typeName CHAR(100)
);

CREATE TABLE SEAT(
    seatID INT NOT NULL AUTO_INCREMENT PRIMARY KEY, 
    seatRow CHAR(1),
    seatCol INT,
    seatType INT,
    roomID INT
);

ALTER TABLE SEAT ADD CONSTRAINT FK_SeatType FOREIGN KEY (seatType) REFERENCES SEAT_TYPE(seatType) ON DELETE SET NULL ON UPDATE CASCADE;
ALTER TABLE SEAT ADD CONSTRAINT FK_SeatRoom FOREIGN KEY (roomID) REFERENCES ROOM(roomID) ON DELETE SET NULL ON UPDATE CASCADE;

CREATE TABLE DISCOUNT(
    discountID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    discountValue CHAR(20) NOT NULL,
    startTime TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    endTime TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    note TEXT
);

CREATE TABLE SHOWTIME_PRICE(
    showID INT NOT NULL,
    seatType INT NOT NULL,
    ticketPrice BIGINT NOT NULL,
    discountID INT,
    PRIMARY KEY(showID, seatType)
);

ALTER TABLE SHOWTIME_PRICE ADD CONSTRAINT FK_Showtime FOREIGN KEY (showID) REFERENCES SHOWTIME(showID) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE SHOWTIME_PRICE ADD CONSTRAINT FK_ShowtimeSeat FOREIGN KEY (seatType) REFERENCES SEAT_TYPE(seatType) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE SHOWTIME_PRICE ADD CONSTRAINT FK_ShowtimePrice_Discount FOREIGN KEY (discountID) REFERENCES DISCOUNT(discountID) ON DELETE SET NULL ON UPDATE CASCADE;

CREATE TABLE GROUP_PERMISSION(
    permissionID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    groupName CHAR(100)
);

CREATE TABLE FEATURE(
    featureID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    featureName CHAR(255)
);

CREATE TABLE FEATURE_PERMISSION(
    permissionID INT NOT NULL,
    featureID INT NOT NULL,
    actionName CHAR(20),
    isActive boolean,
    webPath CHAR(255),
    PRIMARY KEY (permissionID, featureID, actionName)
);

ALTER TABLE FEATURE_PERMISSION ADD CONSTRAINT FK_PERMISS FOREIGN KEY (permissionID) REFERENCES GROUP_PERMISSION(permissionID) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE FEATURE_PERMISSION ADD CONSTRAINT FK_FEATURE FOREIGN KEY  (featureID) REFERENCES FEATURE(featureID) ON DELETE CASCADE ON UPDATE CASCADE;

CREATE TABLE USER(
    userID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    email char(200) unique not null,
    userPassword char(200) not null,
    isActive boolean,
    createAt timestamp,
    permissionID INT
);

ALTER TABLE USER ADD CONSTRAINT FK_USER_PERMISS FOREIGN KEY (permissionID) REFERENCES GROUP_PERMISSION(permissionID) ON DELETE SET NULL ON UPDATE CASCADE;

CREATE TABLE BOOKING(
    bookingID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    bookName char(255),
    bookEmail CHAR(255),
    bookTime TIMESTAMP,
    userID INT
);

ALTER TABLE BOOKING ADD CONSTRAINT FK_BookingUSER FOREIGN KEY (userID) REFERENCES USER(userID) ON DELETE SET NULL ON UPDATE CASCADE;

CREATE TABLE FOOD(
    foodID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    foodImage CHAR(255),
    foodName CHAR(255),
    foodPrice BIGINT,
    foodDescription CHAR(255),
    discountID INT
);

ALTER TABLE FOOD ADD CONSTRAINT FK_Food_Discount FOREIGN KEY (discountID) REFERENCES DISCOUNT(discountID) ON DELETE SET NULL ON UPDATE CASCADE;

CREATE TABLE FOOD_BOOKING(
    bookingID INT NOT NULL,
    foodID INT NOT NULL,
    foodPrice BIGINT,
    foodUnit INT,
    PRIMARY KEY (bookingID, foodID)
);

ALTER TABLE FOOD_BOOKING ADD CONSTRAINT FK_FOOD_BOOKING FOREIGN KEY (foodID) REFERENCES FOOD(foodID) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE FOOD_BOOKING ADD CONSTRAINT FK_BOOKING_FOOD FOREIGN KEY (bookingID) REFERENCES BOOKING(bookingID) ON DELETE CASCADE ON UPDATE CASCADE;

CREATE TABLE SEAT_SHOWTIME(
    showID INT NOT NULL,
    seatID INT NOT NULL,
    pickedAt TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    seatPrice BIGINT,
    isBooked boolean,
    userID INT,
    bookingID INT,
    PRIMARY KEY (showID, seatID)
);

ALTER TABLE SEAT_SHOWTIME ADD CONSTRAINT FK_SEAT_SHOWTIME_USER FOREIGN KEY (userID) REFERENCES USER(userID) ON DELETE SET NULL ON UPDATE CASCADE;
ALTER TABLE SEAT_SHOWTIME ADD CONSTRAINT FK_SEAT_SHOWTIME_BOOKING FOREIGN KEY (bookingID) REFERENCES BOOKING(bookingID) ON DELETE SET NULL ON UPDATE CASCADE;
ALTER TABLE SEAT_SHOWTIME ADD CONSTRAINT FK_SEAT_SHOWTIME_SHOW FOREIGN KEY (showID) REFERENCES SHOWTIME(showID) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE SEAT_SHOWTIME ADD CONSTRAINT FK_SEAT_SHOWTIME_SEAT FOREIGN KEY (seatID) REFERENCES SEAT(seatID) ON DELETE CASCADE ON UPDATE CASCADE;

CREATE TABLE RATING(
    movieID INT NOT NULL,
    userID INT NOT NULL,
    ratingScore INT,
    ratingTime timestamp DEFAULT CURRENT_TIMESTAMP,
)

ALTER TABLE RATING ADD CONSTRAINT FK_MOVIE FOREIGN KEY (movieID) REFERENCES MOVIE(movieID) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE RATING ADD CONSTRAINT FK_USER FOREIGN KEY (userID) REFERENCES USER(userID) ON DELETE CASCADE ON UPDATE CASCADE;